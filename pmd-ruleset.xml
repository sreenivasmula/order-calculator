<?xml version="1.0"?>
<ruleset	name="eAPI PMD Ruleset"
			xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>
		eAPI PMD Ruleset
	</description>
	<rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation"/>
	<rule ref="rulesets/java/basic.xml/BooleanInstantiation"/>
	<rule ref="rulesets/java/basic.xml/BrokenNullCheck"/>
	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray"/>
	<rule ref="rulesets/java/basic.xml/CollapsibleIfStatements"/>
	<rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop"/>
	<rule ref="rulesets/java/basic.xml/JumbledIncrementer"/>
	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck"/>
	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement"/>
	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces"/>
	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces"/>
	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces"/>
	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces"/>
	<rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable"/>
	<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException"/>
	<rule ref="rulesets/java/codesize.xml/NcssMethodCount"/>
	<rule ref="rulesets/java/codesize.xml/NcssTypeCount"/>
	<rule ref="rulesets/java/controversial.xml/AssignmentInOperand"/>
	<rule ref="rulesets/java/controversial.xml/AvoidAccessibilityAlteration"/>
	<rule ref="rulesets/java/controversial.xml/AvoidPrefixingMethodParameters"/>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode"/>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile"/>
	<rule ref="rulesets/java/controversial.xml/CallSuperInConstructor"/>
	<rule ref="rulesets/java/controversial.xml/DefaultPackage"/>
	<rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly"/>
	<rule ref="rulesets/java/controversial.xml/DontImportSun"/>
	<rule ref="rulesets/java/controversial.xml/OneDeclarationPerLine"/>
	<rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape"/>
	<rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor"/>
	<rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic"/>
	<rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts"/>
	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause"/>
	<rule ref="rulesets/java/design.xml/AvoidReassigningParameters"/>
	<rule ref="rulesets/java/design.xml/CloseResource"/>
	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals"/>
	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
	<rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt"/>
	<rule ref="rulesets/java/design.xml/EqualsNull"/>
	<rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic"/>
	<rule ref="rulesets/java/design.xml/IdempotentOperations"/>
	<rule ref="rulesets/java/design.xml/InstantiationToGetClass"/>
	<rule ref="rulesets/java/design.xml/LogicInversion"/>
	<rule ref="rulesets/java/design.xml/MissingBreakInSwitch"/>
	<rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
	<rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement"/>
	<rule ref="rulesets/java/design.xml/NonStaticInitializer"/>
	<rule ref="rulesets/java/design.xml/NonThreadSafeSingleton"/>
	<rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
	<rule ref="rulesets/java/design.xml/PreserveStackTrace"/>
	<rule ref="rulesets/java/design.xml/SimplifyConditional"/>
	<rule ref="rulesets/java/design.xml/SingularField"/>
	<rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault"/>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor"/>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyMethodBody"/>
	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn"/>
	<rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter"/>
	<rule ref="rulesets/java/design.xml/UseCollectionIsEmpty"/>
	<rule ref="rulesets/java/empty.xml/EmptyCatchBlock"/>
	<rule ref="rulesets/java/empty.xml/EmptyFinallyBlock"/>
	<rule ref="rulesets/java/empty.xml/EmptyIfStmt"/>
	<rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop"/>
	<rule ref="rulesets/java/empty.xml/EmptyStaticInitializer"/>
	<rule ref="rulesets/java/empty.xml/EmptySwitchStatements"/>
	<rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock"/>
	<rule ref="rulesets/java/empty.xml/EmptyTryBlock"/>
	<rule ref="rulesets/java/empty.xml/EmptyWhileStmt"/>
	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize"/>
	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer"/>
	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded"/>	
	<rule ref="rulesets/java/imports.xml/DontImportJavaLang"/>
	<rule ref="rulesets/java/imports.xml/UnusedImports"/>	
	<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging"/>
	<rule ref="rulesets/java/logging-java.xml"/>	
	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier"/>
	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier"/>
	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation"/>
	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator"/>
	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap"/>
	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList"/>	
	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
	<rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>
	<rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>	
	<rule ref="rulesets/java/optimizations.xml/AddEmptyString"/>
	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
	<rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith"/>
	<rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>
	<rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends"/>	
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE"/>
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable"/>
	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException"/>
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException"/>
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl"/>
	<rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException"/>	
	<rule ref="rulesets/java/strings.xml/AppendCharacterWithChar"/>
	<rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals"/>
	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField"/>
	<rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends"/>
	<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck"/>
	<rule ref="rulesets/java/strings.xml/InefficientStringBuffering"/>
	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration"/>
	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar"/>
	<rule ref="rulesets/java/strings.xml/StringInstantiation"/>
	<rule ref="rulesets/java/strings.xml/StringToString"/>
	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange"/>
	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings"/>
	<rule ref="rulesets/java/strings.xml/UseIndexOfChar"/>
	<rule ref="rulesets/java/strings.xml/UselessStringValueOf"/>
	<rule ref="rulesets/java/strings.xml/UseStringBufferLength"/>	
	<rule ref="rulesets/java/typeresolution.xml/LooseCoupling"/>
	<rule ref="rulesets/java/typeresolution.xml/UnusedImports"/>	
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn"/>
	<rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals"/>
	<rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable"/>
	<rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod"/>	
	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter"/>
	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
	<rule ref="rulesets/java/unusedcode.xml/UnusedModifier"/>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
</ruleset>